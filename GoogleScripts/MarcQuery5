function RUNpullQ5fromMARC() {
var ss = SpreadsheetApp.openById("1VVmLB_0tyXC0R2EoCJOlv_jaXwGCRSUIQM4z--IKEXg");

var sheet = ss.getSheetByName('MapQuery5');
var sheet2 = ss.getSheetByName('Summary5');
var jurisdiction;
var geoid;
var region;
var state;
var date;
var c1; var c2; //var c3; var c4;
var d1; var d2; //var d3; var d4;
var t1; //var t2; var t3;
  var t4; var t5; var t6;
var hospitalizations;
var recovered;
var p1; var p2; var p3; var p4;
  let sums = [20];
 for (let i=0; i<20; ++i) sums[i]=0;
var humanDate;
var year;
var month;
var date;
var urlA = 'https://gis2.marc2.org/arcgis/rest/services/HumanServices/COVIDv2/MapServer/5/query?where=1%3E0&text=&objectIds=&time=&geometry=&geometryType=esriGeometryEnvelope&inSR=&spatialRel=esriSpatialRelIntersects&relationParam=&outFields=*&returnGeometry=false&returnTrueCurves=false&maxAllowableOffset=&geometryPrecision=&outSR=&returnIdsOnly=false&returnCountOnly=false&orderByFields=GeoID&groupByFieldsForStatistics=&outStatistics=&returnZ=false&returnM=false&gdbVersion=&returnDistinctValues=false&resultOffset=&resultRecordCount=&queryByDistance=&returnExtentsOnly=false&datumTransformation=&parameterValues=&rangeValues=&f=pjson';
var data;
    var response = UrlFetchApp.fetch(urlA, {'muteHttpExceptions': true});
    var json = response.getContentText();
    data = JSON.parse(json); 
  pullData(json);
  
function pullData(json) {
  
  var lastRow = sheet.getLastRow();
  var row =1;
  data.features.forEach((item) => {
    
    jurisdiction = item.attributes.Jurisdiction;
    geoid = item.attributes.GeoID;
	region = item.attributes.Region;
    if ((region == 'MARC' || region == 'MARC_HCC') ) {
      c1 = item.attributes.CasesNew;
      c2 = item.attributes.CasesTotal;
      //c3 = item.attributes.CasesNewPrevDay;
      //c4 = item.attributes.CasesNewChange;                    
      d1 = item.attributes.DeathsNew;
      d2 = item.attributes.DeathsTotal;
      //d3 = item.attributes.DeathsNewPrevDay;
      //d4 = item.attributes.DeathsNewChange;
      t1 = item.attributes.TestsNew;
      //t2 = item.attributes.TestsNewPrevDay;
      //t3 = item.attributes.TestsNewChange;
      t4 = item.attributes.TestsTotal;
      t5 = item.attributes.TestsNegativeNew;
      t6 = item.attributes.TestsNegative;
      hospitalizations = item.attributes.Hospitalizations;
      recovered = item.attributes.Recovered;
      p1 = item.attributes.Population;
      p2 = item.attributes.CasesPer100K;
      p3 = item.attributes.DeathsPer100K;
      p4 = item.attributes.TestsPer100K;
	  humanDate = new Date();
	  month = humanDate.getMonth() + 1;
	  day = humanDate.getDate();
	  year = humanDate.getFullYear();
      if (geoid == 'MARC') {
        sums[0] += c1;sums[1] += c2; //sums[2] += c3;sums[3] += c4;
        sums[4] += d1;sums[5] += d2; //sums[6] += d3;sums[7] += d4; 
        sums[8] += t1;//sums[9] += t2; sums[10] += t3;
        sums[11] += t4; sums[12] += t5;sums[13] += t6;
        sums[14] += hospitalizations;sums[15] += recovered;
        sums[16] += p1;sums[17] += p2; sums[18] += p3;sums[19] += p4;   
      }
      row = row +1;
	  addValuesToSheet(sheet, month,day,year,row, jurisdiction, geoid, region, c1,c2,d1,d2,t1,t4,t5,t6,p1,p2,p3,p4,hospitalizations,recovered);
  }
  });
  addValuesToSumSheet(sheet2, month,day,year,row,sums[0],sums[1],sums[4],sums[5],sums[8],sums[11],sums[12],sums[13],sums[14],sums[15],sums[16],sums[17],sums[18],sums[19]);
}

function addValuesToSheet(sheetid, month,date,year,row,jurisdiction, geoid, region, c1,c2,d1,d2,t1,t4,t5,t6,p1,p2,p3,p4,hospitalizations,recovered) {
	insertRow(sheetid, [month + "/" + date + "/" + year,jurisdiction, geoid, region, c1,c2,d1,d2,t1,t4,t5,t6,p1,p2,p3,p4,hospitalizations,recovered], row);
}
function addValuesToSumSheet(sheetid, month,date,year,row,s1,s2,s5,s8,s11,s12,s13,s14,s15,s16,s17,s18,s19,s20) {
	insertRow(sheetid, [month + "/" + date + "/" + year,'total',s1,s2,s5,s8,s11,s12,s13,s14,s15,s16,s17,s18,s19,s20], row);
}

function insertRow(sheet, rowData, optIndex) { 
	//var lock = LockService.getScriptLock(); lock.waitLock(30000);
	//try
  { 
          sheet.getRange(sheet.getLastRow()+1, 1, 1, rowData.length).setValues(new Array(rowData));
		//SpreadsheetApp.flush();
	} 
  //finally {	lock.releaseLock();}
}
}

